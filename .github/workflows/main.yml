# This is a basic workflow to help you get started with Actions

name: Latex Make and Publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_latex:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with:
          root_file: main.tex
      - name: Uploading artifact
        uses: actions/upload-artifact@v2
        with:
          name: PDF
          path: main.pdf
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Resume compiled on ${{ steps.time.outputs.time }}
          tag_name: ${{ steps.time.outputs.time }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.pdf
          asset_name:  Adam Doherty resume.pdf
          asset_content_type: application/pdf
          
      - name: Install ghostscript
        run: sudo apt-get update --fix-missing && sudo apt install ghostscript
      - name: Change ImageMagick security policy
        run: |
          DQT='"' 
          SRC="rights=${DQT}none${DQT} pattern=${DQT}PDF${DQT}"
          RPL="rights=${DQT}read\|write${DQT} pattern=${DQT}PDF${DQT}"
          
          HGT="name=${DQT}height${DQT} value=${DQT}10KP${DQT}"
          HGTR="name=${DQT}height${DQT} value=${DQT}128Kp${DQT}"
          
          WDT="name=${DQT}width${DQT} value=${DQT}10KP${DQT}"
          WDTR="name=${DQT}width${DQT} value=${DQT}128Kp${DQT}"
          
          MAP="name=${DQT}map${DQT} value=${DQT}512MiB${DQT}"
          MAPR="name=${DQT}map${DQT} value=${DQT}4GiB${DQT}"
          
          MEM="name=${DQT}memory${DQT} value=${DQT}256MiB${DQT}"
          MEMR="name=${DQT}memory${DQT} value=${DQT}2GiB${DQT}"
          
          sudo sed -i "s/$SRC/$RPL/" /etc/ImageMagick-6/policy.xml
          sudo sed -i "s/$HGT/$HGTR/" /etc/ImageMagick-6/policy.xml
          sudo sed -i "s/$WDT/$WDTR/" /etc/ImageMagick-6/policy.xml
          sudo sed -i "s/$MAP/$MAPR/" /etc/ImageMagick-6/policy.xml
          sudo sed -i "s/$MEM/$MEMR/" /etc/ImageMagick-6/policy.xml
          
      - name: Convert PDF to PNG
        run: convert -density 900 -background white -alpha off main.pdf -resize 25% -quality 90 -colorspace RGB resume.png
      - name: Commit PNG
        id: commit
        run: |
          git config --local user.email "action[bot]@github.com"
          git config --local user.name "github-actions[bot]"
          git add resume.png
          git add main.pdf
          git commit -m "[bot] updated png and pdf"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
